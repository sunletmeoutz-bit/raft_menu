# -*- coding: utf-8 -*-
# app.py ‚Äî –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–µ–Ω—é —Å–ø–ª–∞–≤–∞ (–º–æ–±–∏–ª—å–Ω—ã–π –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥ + –ø–ª–∞–Ω –ø–æ –¥–Ω—è–º)

import io
import os
import pandas as pd
import streamlit as st

# ================= –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–¶–´ –ò –°–¢–ò–õ–¨ =================
st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–µ–Ω—é —Å–ø–ª–∞–≤–∞",
    page_icon="üç≤",
    layout="centered",
)

st.markdown("""
<style>
/* –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏-—ç–∫—Å–ø–∞–Ω–¥–µ—Ä—ã */
.stExpander { border-radius: 12px; margin-bottom: 10px; }
div[data-testid="stExpander"] > details { background: #1f2937; color: #fff; border: 1px solid #374151; }
div[data-testid="stExpander"] summary { padding: 8px 12px; }
/* –∑–∞–≥–æ–ª–æ–≤–∫–∏ */
h1,h2,h3 { color: #ffcc70 !important; }
/* –∫–Ω–æ–ø–∫–∏ */
.stButton button { border-radius: 10px; background: #ff7043; color: #fff; font-weight: 600; }
.stButton button:hover { background: #ff5722; }
/* –ø–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ—à–∏—Ä–µ –ø–æ–¥ –ø–∞–ª–µ—Ü */
.stNumberInput > div { min-width: 280px; }
/* —Ç–∞–±–ª–∏—Ü—ã */
.block-container { padding-top: 1.2rem; }
</style>
""", unsafe_allow_html=True)

# ================= –î–ê–ù–ù–´–ï –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ =================
@st.cache_data
def –∑–∞–≥—Ä—É–∑–∏—Ç—å_–¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ_–±–ª—é–¥–∞() -> pd.DataFrame:
    # –ù–æ—Ä–º—ã —É–∫–∞–∑–∞–Ω—ã –Ω–∞ 1 —á–µ–ª–æ–≤–µ–∫–∞
    data = [
        # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ó–∞–≤—Ç—Ä–∞–∫–∏ (3 —à—Ç) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        ["ü•£ –û–≤—Å—è–Ω–∫–∞ —Å —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏", "–û–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è", "–≥", 70],
        ["ü•£ –û–≤—Å—è–Ω–∫–∞ —Å —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏", "–°—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã (–º–∏–∫—Å)", "–≥", 30],
        ["ü•£ –û–≤—Å—è–Ω–∫–∞ —Å —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏", "–°–∞—Ö–∞—Ä", "–≥", 10],
        ["ü•£ –û–≤—Å—è–Ω–∫–∞ —Å —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏", "–°–æ–ª—å", "–≥", 1],

        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–¢–≤–æ—Ä–æ–≥", "–≥", 180],
        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–Ø–π—Ü–æ –∫—É—Ä–∏–Ω–æ–µ", "—à—Ç", 0.5],
        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è", "–≥", 25],
        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–°–∞—Ö–∞—Ä", "–≥", 15],
        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–°–æ–ª—å", "–≥", 1],
        ["üßÄ –°—ã—Ä–Ω–∏–∫–∏", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "–º–ª", 10],

        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–Ø–π—Ü–æ –∫—É—Ä–∏–Ω–æ–µ", "—à—Ç", 2],
        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–ú–æ–ª–æ–∫–æ", "–º–ª", 50],
        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–ü–µ—Ä–µ—Ü —Å–ª–∞–¥–∫–∏–π", "–≥", 30],
        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 20],
        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "–º–ª", 10],
        ["üç≥ –û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏", "–°–æ–ª—å", "–≥", 3],

        # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        ["üç≤ –ü–ª–æ–≤", "–†–∏—Å", "–≥", 100],
        ["üç≤ –ü–ª–æ–≤", "–°–≤–∏–Ω–∏–Ω–∞/–≥–æ–≤—è–¥–∏–Ω–∞", "–≥", 130],
        ["üç≤ –ü–ª–æ–≤", "–ú–æ—Ä–∫–æ–≤—å", "–≥", 40],
        ["üç≤ –ü–ª–æ–≤", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 25],
        ["üç≤ –ü–ª–æ–≤", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "–º–ª", 12],
        ["üç≤ –ü–ª–æ–≤", "–°–æ–ª—å", "–≥", 5],
        ["üç≤ –ü–ª–æ–≤", "–ó–∏—Ä–∞/—Å–ø–µ—Ü–∏–∏", "–≥", 1],

        ["üçñ –®—É–ª—é–º", "–ì–æ–≤—è–¥–∏–Ω–∞", "–≥", 150],
        ["üçñ –®—É–ª—é–º", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–≥", 150],
        ["üçñ –®—É–ª—é–º", "–ú–æ—Ä–∫–æ–≤—å", "–≥", 40],
        ["üçñ –®—É–ª—é–º", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 25],
        ["üçñ –®—É–ª—é–º", "–°–æ–ª—å", "–≥", 6],

        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–°–≤–µ–∫–ª–∞", "–≥", 80],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–ö–∞–ø—É—Å—Ç–∞ –±–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è", "–≥", 100],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–≥", 100],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–ú–æ—Ä–∫–æ–≤—å", "–≥", 40],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 25],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞", "–≥", 20],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–ì–æ–≤—è–¥–∏–Ω–∞/—Å–≤–∏–Ω–∏–Ω–∞", "–≥", 120],
        ["ü•£ –ë–æ—Ä—â (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π)", "–°–æ–ª—å", "–≥", 6],

        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–ü–∞—Å—Ç–∞", "–≥", 100],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–ì—Ä–∏–±—ã (—à–∞–º–ø–∏–Ω—å–æ–Ω—ã/–ª–µ—Å–Ω—ã–µ)", "–≥", 120],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–°–ª–∏–≤–∫–∏ 20%", "–º–ª", 80],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 20],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–ß–µ—Å–Ω–æ–∫", "–≥", 5],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ/–æ–ª–∏–≤–∫–æ–≤–æ–µ", "–º–ª", 10],
        ["üçù –ü–∞—Å—Ç–∞ —Å –≥—Ä–∏–±–∞–º–∏ –∏ —Å–ª–∏–≤–∫–∞–º–∏", "–°–æ–ª—å", "–≥", 5],

        # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –£–∂–∏–Ω—ã (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–†–∏—Å", "–≥", 90],
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–ö—É—Ä–∏—Ü–∞ (—Ñ–∏–ª–µ)", "–≥", 120],
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–ú–æ—Ä–∫–æ–≤—å", "–≥", 30],
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 20],
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "–º–ª", 10],
        ["üçó –†–∏—Å —Å –æ–≤–æ—â–∞–º–∏ –∏ –∫—É—Ä–∏—Ü–µ–π", "–°–æ–ª—å", "–≥", 5],

        ["ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≥—Ä–∏–±–∞–º–∏", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–≥", 200],
        ["ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≥—Ä–∏–±–∞–º–∏", "–ì—Ä–∏–±—ã (—à–∞–º–ø–∏–Ω—å–æ–Ω—ã/–ª–µ—Å–Ω—ã–µ)", "–≥", 120],
        ["ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≥—Ä–∏–±–∞–º–∏", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 30],
        ["ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≥—Ä–∏–±–∞–º–∏", "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "–º–ª", 15],
        ["ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≥—Ä–∏–±–∞–º–∏", "–°–æ–ª—å", "–≥", 5],

        ["üéÉ –ü—à—ë–Ω–Ω–∞—è –∫–∞—à–∞ —Å —Ç—ã–∫–≤–æ–π", "–ü—à–µ–Ω–æ", "–≥", 80],
        ["üéÉ –ü—à—ë–Ω–Ω–∞—è –∫–∞—à–∞ —Å —Ç—ã–∫–≤–æ–π", "–¢—ã–∫–≤–∞", "–≥", 150],
        ["üéÉ –ü—à—ë–Ω–Ω–∞—è –∫–∞—à–∞ —Å —Ç—ã–∫–≤–æ–π", "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", "–≥", 10],
        ["üéÉ –ü—à—ë–Ω–Ω–∞—è –∫–∞—à–∞ —Å —Ç—ã–∫–≤–æ–π", "–°–∞—Ö–∞—Ä", "–≥", 10],
        ["üéÉ –ü—à—ë–Ω–Ω–∞—è –∫–∞—à–∞ —Å —Ç—ã–∫–≤–æ–π", "–°–æ–ª—å", "–≥", 2],

        # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –†–µ–∑–µ—Ä–≤ ¬´–ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É¬ª ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        ["‚õ∫ –ì—Ä–µ—á–∫–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–ì—Ä–µ—á–∫–∞", "–≥", 80],
        ["‚õ∫ –ì—Ä–µ—á–∫–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–¢—É—à—ë–Ω–∫–∞ –≥–æ–≤—è–∂—å—è", "–≥", 120],
        ["‚õ∫ –ì—Ä–µ—á–∫–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 20],
        ["‚õ∫ –ì—Ä–µ—á–∫–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–°–æ–ª—å", "–≥", 5],
        ["‚õ∫ –ì—Ä–µ—á–∫–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–°–ø–µ—Ü–∏–∏", "–≥", 1],

        ["‚õ∫ –ü–∞—Å—Ç–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–ü–∞—Å—Ç–∞", "–≥", 100],
        ["‚õ∫ –ü–∞—Å—Ç–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–¢—É—à—ë–Ω–∫–∞ –≥–æ–≤—è–∂—å—è", "–≥", 120],
        ["‚õ∫ –ü–∞—Å—Ç–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "–≥", 20],
        ["‚õ∫ –ü–∞—Å—Ç–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞", "–≥", 40],
        ["‚õ∫ –ü–∞—Å—Ç–∞ –ø–æ-–ø–æ—Ö–æ–¥–Ω–æ–º—É (—Å —Ç—É—à—ë–Ω–∫–æ–π)", "–°–æ–ª—å", "–≥", 5],
    ]
    return pd.DataFrame(data, columns=["–ë–ª—é–¥–æ","–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"])

if "–±–ª—é–¥–∞" not in st.session_state:
    st.session_state["–±–ª—é–¥–∞"] = –∑–∞–≥—Ä—É–∑–∏—Ç—å_–¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ_–±–ª—é–¥–∞()

# ================= –í–í–û–î –ü–ê–†–ê–ú–ï–¢–†–û–í =================
st.title("üç≤ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–µ–Ω—é —Å–ø–ª–∞–≤–∞")

c1, c2 = st.columns(2)
with c1:
    –¥–Ω–∏ = st.number_input("üìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π", min_value=1, max_value=30, value=3, step=1)
with c2:
    —É—á–∞—Å—Ç–Ω–∏–∫–∏ = st.number_input("üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", min_value=1, max_value=100, value=6, step=1)

# ---------- –ú–ï–ù–Æ –ò –ò–ù–ì–†–ï–î–ò–ï–ù–¢–´ (—Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–∞–µ–º –±–ª—é–¥–∞) ----------
st.subheader("üìã –ú–µ–Ω—é –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã")

# —á–∏—Å—Ç–∞—è –±–∞–∑–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞
df_view = st.session_state["–±–ª—é–¥–∞"].dropna(
    subset=["–ë–ª—é–¥–æ","–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"]
).copy()

# —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–ª—é–¥
all_dishes = sorted(df_view["–ë–ª—é–¥–æ"].unique().tolist())

# –≤—ã–±–æ—Ä –±–ª—é–¥ –¥–ª—è –ø–æ—Ö–æ–¥–∞ (–º–æ–±–∏–ª—å–Ω—ã–π friendly)
selected_dishes = st.multiselect(
    "–í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –¥–ª—è –ø–æ—Ö–æ–¥–∞",
    options=all_dishes,
    default=[],
    help="–°–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ—Ç—å—Ç–µ –Ω—É–∂–Ω—ã–µ –±–ª—é–¥–∞ ‚Äî –Ω–∏–∂–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–∞–≤.",
    placeholder="‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ ‚Äî"
)

search = st.text_input("–ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É", "")

if not selected_dishes:
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –±–ª—é–¥–æ –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.")
else:
    for dish in selected_dishes:
        sub = df_view[df_view["–ë–ª—é–¥–æ"] == dish][["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"]].copy()
        if search.strip():
            sub = sub[sub["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"].str.contains(search, case=False, na=False)]

        with st.expander(f"{dish} ¬∑ {len(sub)} –∏–Ω–≥.", expanded=False):
            st.dataframe(sub.reset_index(drop=True), use_container_width=True, height=220)
            total_gram = sub.loc[sub["–ï–¥.–∏–∑–º"].isin(["–≥","–º–ª"]), "–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"].sum()
            st.caption(f"–°—É–º–º–∞—Ä–Ω–æ –Ω–∞ 1 —á–µ–ª (–≥/–º–ª): {total_gram:g}" if total_gram else " ")

# ---------- –ü–õ–ê–ù –ü–û –î–ù–Ø–ú –ò –ü–†–ò–Å–ú–ê–ú –ü–ò–©–ò (–≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞) ----------
st.subheader("üóìÔ∏è –ü–ª–∞–Ω –ø–æ –¥–Ω—è–º –∏ –ø—Ä–∏—ë–º–∞–º –ø–∏—â–∏")

–ü–†–ò–ï–ú–´_–ü–ò–©–ò = ["–ó–∞–≤—Ç—Ä–∞–∫", "–û–±–µ–¥", "–£–∂–∏–Ω"]

if selected_dishes:
    –≤–∞—Ä–∏–∞–Ω—Ç—ã_–¥–ª—è_–ø–ª–∞–Ω–∞ = ["‚Äî –Ω–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî"] + selected_dishes
else:
    # –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –≤—ã—à–µ ‚Äî –ø–æ–∑–≤–æ–ª–∏–º –≤—ã–±—Ä–∞—Ç—å –∏–∑ –≤—Å–µ—Ö
    –≤–∞—Ä–∏–∞–Ω—Ç—ã_–¥–ª—è_–ø–ª–∞–Ω–∞ = ["‚Äî –Ω–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî"] + all_dishes

–ø–ª–∞–Ω_—Å—Ç—Ä–æ–∫–∏ = []
for d in range(1, int(–¥–Ω–∏) + 1):
    st.markdown(f"–î–µ–Ω—å {d}")
    cols = st.columns(3)
    for i, –ø—Ä–∏–µ–º in enumerate(–ü–†–ò–ï–ú–´_–ü–ò–©–ò):
        with cols[i]:
            key = f"–ø–ª–∞–Ω_{d}_{–ø—Ä–∏–µ–º}"
            –≤—ã–±–æ—Ä = st.selectbox(–ø—Ä–∏–µ–º, –≤–∞—Ä–∏–∞–Ω—Ç—ã_–¥–ª—è_–ø–ª–∞–Ω–∞, index=0, key=key)
            –ø–ª–∞–Ω_—Å—Ç—Ä–æ–∫–∏.append({
                "–î–µ–Ω—å": d,
                "–ü—Ä–∏—ë–º –ø–∏—â–∏": –ø—Ä–∏–µ–º,
                "–ë–ª—é–¥–æ": None if –≤—ã–±–æ—Ä == "‚Äî –Ω–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî" else –≤—ã–±–æ—Ä
            })
    st.divider()

–ø–ª–∞–Ω_df = pd.DataFrame(–ø–ª–∞–Ω_—Å—Ç—Ä–æ–∫–∏)

# ================= –†–ê–°–ß–Å–¢ –ò–¢–û–ì–û–í–û–ô –ó–ê–ö–£–ü–ö–ò –ü–û –ü–õ–ê–ù–£ =================
st.subheader("üõí –ò—Ç–æ–≥–æ–≤–∞—è –∑–∞–∫—É–ø–∫–∞")

–±–ª—é–¥–∞_df = st.session_state["–±–ª—é–¥–∞"].dropna(subset=["–ë–ª—é–¥–æ","–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"]).copy()

# —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∫–∞–∂–¥–æ–µ –±–ª—é–¥–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ –ø–ª–∞–Ω–µ
—Å—á—ë—Ç—á–∏–∫–∏ = (–ø–ª–∞–Ω_df.dropna(subset=["–ë–ª—é–¥–æ"])
            .groupby("–ë–ª—é–¥–æ").size()
            .rename("–°–∫–æ–ª—å–∫–æ —Ä–∞–∑").reset_index())

# –º–µ—Ä–∂–∏–º —Ä–µ—Ü–µ–ø—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ä–∞–∑
—Ä–∞—Å—á—ë—Ç = –±–ª—é–¥–∞_df.merge(—Å—á—ë—Ç—á–∏–∫–∏, on="–ë–ª—é–¥–æ", how="left").fillna({"–°–∫–æ–ª—å–∫–æ —Ä–∞–∑": 0})

# –∏—Ç–æ–≥–æ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–µ—Ü–µ–ø—Ç–∞
—Ä–∞—Å—á—ë—Ç["–ò—Ç–æ–≥–æ –ø–æ –±–ª—é–¥—É"] = —Ä–∞—Å—á—ë—Ç["–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"] * int(—É—á–∞—Å—Ç–Ω–∏–∫–∏) * —Ä–∞—Å—á—ë—Ç["–°–∫–æ–ª—å–∫–æ —Ä–∞–∑"]

# –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –∫ –∑–∞–∫—É–ø–∫–µ
–∏—Ç–æ–≥ = (—Ä–∞—Å—á—ë—Ç.groupby(["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º"], as_index=False)["–ò—Ç–æ–≥–æ –ø–æ –±–ª—é–¥—É"]
        .sum()
        .rename(columns={"–ò—Ç–æ–≥–æ –ø–æ –±–ª—é–¥—É": "–ò—Ç–æ–≥–æ"})
        .sort_values("–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"))

# —É–±–∏—Ä–∞–µ–º –Ω—É–ª–∏
–∏—Ç–æ–≥ = –∏—Ç–æ–≥[–∏—Ç–æ–≥["–ò—Ç–æ–≥–æ"] > 0].reset_index(drop=True)

st.dataframe(–∏—Ç–æ–≥, use_container_width=True)

# ================= –í–´–ì–†–£–ó–ö–ê EXCEL –ò PDF =================
st.subheader("üìÇ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã")

def excel_–ø–æ–ª–Ω—ã–π(–ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–ª–∞–Ω_df, –±–ª—é–¥–∞_df, –∑–∞–∫—É–ø–∫–∞_df):
    """–ü–æ–ª–Ω—ã–π Excel: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è / –ü–∞—Ä–∞–º–µ—Ç—Ä—ã / –ü–ª–∞–Ω / –ë–ª—é–¥–∞ / –ó–∞–∫—É–ø–∫–∞."""
    from openpyxl import Workbook
    from openpyxl.utils import get_column_letter
    wb = Workbook()

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    ws = wb.active; ws.title = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    —Å—Ç—Ä–æ–∫–∏ = [
        "–ú–µ–Ω—é —Å–ø–ª–∞–≤–∞ ‚Äî –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è",
        "1) –ó–∞–¥–∞–π—Ç–µ '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π' –∏ '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'.",
        "2) –í —Ä–∞–∑–¥–µ–ª–µ '–ü–ª–∞–Ω' –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –¥–ª—è –∑–∞–≤—Ç—Ä–∞–∫–∞/–æ–±–µ–¥–∞/—É–∂–∏–Ω–∞ –ø–æ –¥–Ω—è–º.",
        "3) –†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–µ–Ω—é –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã' –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
        "4) –°–∫–∞—á–∞–π—Ç–µ '–ò—Ç–æ–≥–æ–≤—É—é –∑–∞–∫—É–ø–∫—É' –≤ Excel/PDF.",
    ]
    for i, t in enumerate(—Å—Ç—Ä–æ–∫–∏, 1): ws.cell(i,1,t)
    ws.column_dimensions["A"].width = 110

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    ws_in = wb.create_sheet("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã")
    ws_in.append(["–ü–∞—Ä–∞–º–µ—Ç—Ä","–ó–Ω–∞—á–µ–Ω–∏–µ"])
    ws_in.append(["–î–Ω–∏", –ø–∞—Ä–∞–º–µ—Ç—Ä—ã["days"]])
    ws_in.append(["–£—á–∞—Å—Ç–Ω–∏–∫–∏", –ø–∞—Ä–∞–º–µ—Ç—Ä—ã["participants"]])
    ws_in.column_dimensions["A"].width = 18; ws_in.column_dimensions["B"].width = 14

    # –ü–ª–∞–Ω
    ws_p = wb.create_sheet("–ü–ª–∞–Ω")
    ws_p.append(["–î–µ–Ω—å","–ü—Ä–∏—ë–º –ø–∏—â–∏","–ë–ª—é–¥–æ"])
    for r in –ø–ª–∞–Ω_df[["–î–µ–Ω—å","–ü—Ä–∏—ë–º –ø–∏—â–∏","–ë–ª—é–¥–æ"]].itertuples(index=False): ws_p.append(list(r))
    for i,w in enumerate([8,16,40],1): ws_p.column_dimensions[get_column_letter(i)].width = w

    # –ë–ª—é–¥–∞
    ws_d = wb.create_sheet("–ë–ª—é–¥–∞")
    ws_d.append(["–ë–ª—é–¥–æ","–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"])
    for r in –±–ª—é–¥–∞_df[["–ë–ª—é–¥–æ","–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ù–æ—Ä–º–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞"]].itertuples(index=False): ws_d.append(list(r))
    for i,w in enumerate([30,32,10,18],1): ws_d.column_dimensions[get_column_letter(i)].width = w

    # –ó–∞–∫—É–ø–∫–∞
    ws_s = wb.create_sheet("–ó–∞–∫—É–ø–∫–∞")
    ws_s.append(["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ò—Ç–æ–≥–æ"])
    for r in –∑–∞–∫—É–ø–∫–∞_df[["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ò—Ç–æ–≥–æ"]].itertuples(index=False): ws_s.append(list(r))
    for i,w in enumerate([32,10,14],1): ws_s.column_dimensions[get_column_letter(i)].width = w

    bio = io.BytesIO(); wb.save(bio); bio.seek(0); return bio

def pdf_–∑–∞–∫—É–ø–∫–∞(–∑–∞–∫—É–ø–∫–∞_df, font_path="DejaVuSans.ttf"):
    """PDF —Ç–æ–ª—å–∫–æ —Å –∑–∞–∫—É–ø–∫–æ–π (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞ —á–µ—Ä–µ–∑ TTF)."""
    from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph
    from reportlab.lib.pagesizes import A4
    from reportlab.lib import colors
    from reportlab.lib.styles import getSampleStyleSheet
    from reportlab.pdfbase import pdfmetrics
    from reportlab.pdfbase.ttfonts import TTFont

    font_name = "Cyrillic"
    if os.path.exists(font_path):
        pdfmetrics.registerFont(TTFont(font_name, font_path))
    else:
        font_name = "Helvetica"

    buffer = io.BytesIO()
    doc = SimpleDocTemplate(buffer, pagesize=A4)
    styles = getSampleStyleSheet()
    styles["Title"].fontName = font_name

    story = [Paragraph("–ò—Ç–æ–≥–æ–≤–∞—è –∑–∞–∫—É–ø–∫–∞ –¥–ª—è —Å–ø–ª–∞–≤–∞", styles["Title"])]
    data = [["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç","–ï–¥.–∏–∑–º","–ò—Ç–æ–≥–æ"]] + –∑–∞–∫—É–ø–∫–∞_df.astype(str).values.tolist()
    from reportlab.platypus import Table
    table = Table([list(–∑–∞–∫—É–ø–∫–∞_df.columns)] + –∑–∞–∫—É–ø–∫–∞_df.astype(str).values.tolist(), repeatRows=1)
    table.setStyle([
        ('FONTNAME', (0,0), (-1,-1), font_name),
        ('BACKGROUND', (0,0), (-1,0), colors.lightblue),
        ('TEXTCOLOR', (0,0), (-1,0), colors.black),
        ('FONTSIZE', (0,0), (-1,-1), 10),
        ('ALIGN',(0,0),(-1,-1),'LEFT'),
        ('BOTTOMPADDING', (0,0), (-1,0), 6),
        ('GRID', (0,0), (-1,-1), 0.5, colors.grey),
    ])
    story.append(table)
    doc.build(story)
    buffer.seek(0)
    return buffer

# –ö–Ω–æ–ø–∫–∞ Excel
excel_bytes = excel_–ø–æ–ª–Ω—ã–π(
    –ø–∞—Ä–∞–º–µ—Ç—Ä—ã={"days": int(–¥–Ω–∏), "participants": int(—É—á–∞—Å—Ç–Ω–∏–∫–∏)},
    –ø–ª–∞–Ω_df=–ø–ª–∞–Ω_df,
    –±–ª—é–¥–∞_df=–±–ª—é–¥–∞_df,
    –∑–∞–∫—É–ø–∫–∞_df=–∏—Ç–æ–≥
)
st.download_button(
    "üìä –°–∫–∞—á–∞—Ç—å Excel (–ø–æ–ª–Ω—ã–π —Ñ–∞–π–ª)",
    data=excel_bytes,
    file_name="–º–µ–Ω—é_—Å–ø–ª–∞–≤–∞.xlsx",
    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
)

# –ö–Ω–æ–ø–∫–∞ PDF
try:
    pdf_bytes = pdf_–∑–∞–∫—É–ø–∫–∞(–∏—Ç–æ–≥)
    st.download_button(
        "üìÑ –°–∫–∞—á–∞—Ç—å PDF (—Ç–æ–ª—å–∫–æ –∑–∞–∫—É–ø–∫–∞)",
        data=pdf_bytes,
        file_name="–∑–∞–∫—É–ø–∫–∞.pdf",
        mime="application/pdf"
    )
except Exception as e:
    st.warning(f"PDF –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —Ä—è–¥–æ–º –ª–µ–∂–∏—Ç DejaVuSans.ttf –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω reportlab.")


